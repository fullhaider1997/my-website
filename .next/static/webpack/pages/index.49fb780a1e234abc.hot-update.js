"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/constants/constants.js":
/*!************************************!*\
  !*** ./src/constants/constants.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": function() { return /* binding */ projects; }\n/* harmony export */ });\nvar projects = [{\n  title: \"Electrification of Public Transport in Thunder Bay\",\n  description: \"This product is designed for City of Thunder Baysâ€™ Bus Transit system to simulate the electrification of its current system. They will be able to view the impact on the schedule, estimation of energy consumption and fuel requirements, environmental impact and financial impact after the introduction.\",\n  image: [{\n    link: \"/images/login.png\",\n    caption: \"Login page\"\n  }, {\n    link: \"/images/ev_map.png\",\n    caption: \"EV infrastructure\"\n  }, {\n    link: \"/images/ev_cost.png\",\n    caption: \"Financial cost\"\n  }],\n  tags: [\"CSS\", \"HTML\", \"JavaScript\", \"Python\", \"Django\"],\n  source: \"https://github.com/fullhaider1997/Analysis-and-support-tool-for-charging-infrastructure\",\n  visit: \"https://google.com\",\n  id: 0\n}, {\n  title: \"crypto app react\",\n  description: \"Crypto application that lists top 25 crypto currencies and displays information about them.\",\n  image: \"/images/crpto.png\",\n  tags: [\"React\", \"JavaScript\"],\n  source: \"https://github.com/fullhaider1997/crpto\",\n  link: \"https://learn-crypto-search-crypto.netlify.app\",\n  id: 1\n},, {\n  title: \"FullStack Reddit Clone\",\n  description: \"The purpose of this project is to learn Full stack development wit new cutting edge technologies such as Next.js, GraphQL, SSR, CSR, redis, typeScript, URQL/Apollo, TypeGraphQL, and etc. This Reddit clone will contain basic features of Reddit related to profile, posts, commenting on a post, voting on post, etc  \",\n  image: \"/images/login.png\",\n  tags: [\"GraphQL\", \"TypeScript\", \"Node.js\", \"others\"],\n  source: \"https://github.com/fullhaider1997/reddit-clone\",\n  id: 2\n}, {\n  title: \"Gaze and blink controlled virtual keyboard\",\n  description: \"This project is developed for sake of improving my own skills in C++ , multithreading, computer vision and software design.\",\n  image: \"/images/gaze.png\",\n  tags: [\"C++\", \"Qt\", \"Dlib\", \"QMake\"],\n  source: \"https://github.com/fullhaider1997/Gaze_Controlled_Keyboard-/tree/master\",\n  id: 3\n}, {\n  title: \"A Shopping Cart\",\n  description: \"A Shopping Cart with React and TypeScript. The client can add, remove, update items in his/her cart.\",\n  image: \"/images/cartthree.png\",\n  tags: [\"React\", \"TypeScript\"],\n  source: \"https://github.com/fullhaider1997/Cart\",\n  id: 4\n}, {\n  title: \"Health managment software\",\n  description: \"The system will be used by both the patients and administrative/medical staff. A login system is implemented and the system functions differently depending on the user. The patients are able to request appointments with physicians upon approval of administrative staff depending on availability and priority level.\",\n  image: \"/images/hms.png\",\n  tags: [\"Java\", \"MySQL\", \"Swing\"],\n  source: \"https://github.com/fullhaider1997/HMS\",\n  id: 5\n}, {\n  title: \"Smart Mirror IOT \",\n  description: \"Smart Mirror to teach kids about technology\",\n  image: \"/images/smartmirror.png\",\n  tags: [\"Java\", \"Android\", \"Firebase\", \"Python\"],\n  source: \"https://github.com/Trung28899/SmartMirrorApp\",\n  id: 6\n}];\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBTUEsUUFBUSxHQUFHLENBQ3RCO0VBQ0VDLEtBQUssRUFBRSxvREFEVDtFQUVFQyxXQUFXLEVBQ1QsOFNBSEo7RUFJRUMsS0FBSyxFQUFFLENBQ0w7SUFDRUMsSUFBSSxFQUFFLG1CQURSO0lBRUVDLE9BQU8sRUFBRTtFQUZYLENBREssRUFLTDtJQUNFRCxJQUFJLEVBQUUsb0JBRFI7SUFFRUMsT0FBTyxFQUFFO0VBRlgsQ0FMSyxFQVNMO0lBQ0VELElBQUksRUFBRSxxQkFEUjtJQUVFQyxPQUFPLEVBQUU7RUFGWCxDQVRLLENBSlQ7RUFrQkVDLElBQUksRUFBRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLFlBQWhCLEVBQThCLFFBQTlCLEVBQXdDLFFBQXhDLENBbEJSO0VBbUJFQyxNQUFNLEVBQ0oseUZBcEJKO0VBcUJFQyxLQUFLLEVBQUUsb0JBckJUO0VBc0JFQyxFQUFFLEVBQUU7QUF0Qk4sQ0FEc0IsRUF5QnRCO0VBQ0VSLEtBQUssRUFBRSxrQkFEVDtFQUVFQyxXQUFXLEVBQ1QsNkZBSEo7RUFJRUMsS0FBSyxFQUFFLG1CQUpUO0VBS0VHLElBQUksRUFBRSxDQUFDLE9BQUQsRUFBVSxZQUFWLENBTFI7RUFNRUMsTUFBTSxFQUFFLHlDQU5WO0VBT0VILElBQUksRUFBRSxnREFQUjtFQVFFSyxFQUFFLEVBQUU7QUFSTixDQXpCc0IsR0FvQ3RCO0VBQ0VSLEtBQUssRUFBRSx3QkFEVDtFQUVFQyxXQUFXLEVBQ1QsMlRBSEo7RUFJRUMsS0FBSyxFQUFFLG1CQUpUO0VBS0VHLElBQUksRUFBRSxDQUFDLFNBQUQsRUFBWSxZQUFaLEVBQTBCLFNBQTFCLEVBQXFDLFFBQXJDLENBTFI7RUFNRUMsTUFBTSxFQUFFLGdEQU5WO0VBT0VFLEVBQUUsRUFBRTtBQVBOLENBcENzQixFQThDdEI7RUFDRVIsS0FBSyxFQUFFLDRDQURUO0VBRUVDLFdBQVcsRUFDVCw2SEFISjtFQUlFQyxLQUFLLEVBQUUsa0JBSlQ7RUFLRUcsSUFBSSxFQUFFLENBQUMsS0FBRCxFQUFRLElBQVIsRUFBYyxNQUFkLEVBQXNCLE9BQXRCLENBTFI7RUFNRUMsTUFBTSxFQUNKLHlFQVBKO0VBUUVFLEVBQUUsRUFBRTtBQVJOLENBOUNzQixFQXdEdEI7RUFDRVIsS0FBSyxFQUFFLGlCQURUO0VBRUVDLFdBQVcsRUFDVCxzR0FISjtFQUlFQyxLQUFLLEVBQUUsdUJBSlQ7RUFLRUcsSUFBSSxFQUFFLENBQUMsT0FBRCxFQUFVLFlBQVYsQ0FMUjtFQU1FQyxNQUFNLEVBQUUsd0NBTlY7RUFPRUUsRUFBRSxFQUFFO0FBUE4sQ0F4RHNCLEVBaUV0QjtFQUNFUixLQUFLLEVBQUUsMkJBRFQ7RUFFRUMsV0FBVyxFQUNULDRUQUhKO0VBSUVDLEtBQUssRUFBRSxpQkFKVDtFQUtFRyxJQUFJLEVBQUUsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixPQUFsQixDQUxSO0VBTUVDLE1BQU0sRUFBRSx1Q0FOVjtFQU9FRSxFQUFFLEVBQUU7QUFQTixDQWpFc0IsRUEyRXRCO0VBQ0VSLEtBQUssRUFBRSxtQkFEVDtFQUVFQyxXQUFXLEVBQUUsNkNBRmY7RUFHRUMsS0FBSyxFQUFFLHlCQUhUO0VBSUVHLElBQUksRUFBRSxDQUFDLE1BQUQsRUFBUyxTQUFULEVBQW9CLFVBQXBCLEVBQWdDLFFBQWhDLENBSlI7RUFLRUMsTUFBTSxFQUFFLDhDQUxWO0VBTUVFLEVBQUUsRUFBRTtBQU5OLENBM0VzQixDQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29uc3RhbnRzL2NvbnN0YW50cy5qcz8xYzA2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwcm9qZWN0cyA9IFtcbiAge1xuICAgIHRpdGxlOiBcIkVsZWN0cmlmaWNhdGlvbiBvZiBQdWJsaWMgVHJhbnNwb3J0IGluIFRodW5kZXIgQmF5XCIsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICBcIlRoaXMgcHJvZHVjdCBpcyBkZXNpZ25lZCBmb3IgQ2l0eSBvZiBUaHVuZGVyIEJheXPigJkgQnVzIFRyYW5zaXQgc3lzdGVtIHRvIHNpbXVsYXRlIHRoZSBlbGVjdHJpZmljYXRpb24gb2YgaXRzIGN1cnJlbnQgc3lzdGVtLiBUaGV5IHdpbGwgYmUgYWJsZSB0byB2aWV3IHRoZSBpbXBhY3Qgb24gdGhlIHNjaGVkdWxlLCBlc3RpbWF0aW9uIG9mIGVuZXJneSBjb25zdW1wdGlvbiBhbmQgZnVlbCByZXF1aXJlbWVudHMsIGVudmlyb25tZW50YWwgaW1wYWN0IGFuZCBmaW5hbmNpYWwgaW1wYWN0IGFmdGVyIHRoZSBpbnRyb2R1Y3Rpb24uXCIsXG4gICAgaW1hZ2U6IFtcbiAgICAgIHtcbiAgICAgICAgbGluazogXCIvaW1hZ2VzL2xvZ2luLnBuZ1wiLFxuICAgICAgICBjYXB0aW9uOiBcIkxvZ2luIHBhZ2VcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxpbms6IFwiL2ltYWdlcy9ldl9tYXAucG5nXCIsXG4gICAgICAgIGNhcHRpb246IFwiRVYgaW5mcmFzdHJ1Y3R1cmVcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxpbms6IFwiL2ltYWdlcy9ldl9jb3N0LnBuZ1wiLFxuICAgICAgICBjYXB0aW9uOiBcIkZpbmFuY2lhbCBjb3N0XCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgdGFnczogW1wiQ1NTXCIsIFwiSFRNTFwiLCBcIkphdmFTY3JpcHRcIiwgXCJQeXRob25cIiwgXCJEamFuZ29cIl0sXG4gICAgc291cmNlOlxuICAgICAgXCJodHRwczovL2dpdGh1Yi5jb20vZnVsbGhhaWRlcjE5OTcvQW5hbHlzaXMtYW5kLXN1cHBvcnQtdG9vbC1mb3ItY2hhcmdpbmctaW5mcmFzdHJ1Y3R1cmVcIixcbiAgICB2aXNpdDogXCJodHRwczovL2dvb2dsZS5jb21cIixcbiAgICBpZDogMCxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcImNyeXB0byBhcHAgcmVhY3RcIixcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgIFwiQ3J5cHRvIGFwcGxpY2F0aW9uIHRoYXQgbGlzdHMgdG9wIDI1IGNyeXB0byBjdXJyZW5jaWVzIGFuZCBkaXNwbGF5cyBpbmZvcm1hdGlvbiBhYm91dCB0aGVtLlwiLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvY3JwdG8ucG5nXCIsXG4gICAgdGFnczogW1wiUmVhY3RcIiwgXCJKYXZhU2NyaXB0XCJdLFxuICAgIHNvdXJjZTogXCJodHRwczovL2dpdGh1Yi5jb20vZnVsbGhhaWRlcjE5OTcvY3JwdG9cIixcbiAgICBsaW5rOiBcImh0dHBzOi8vbGVhcm4tY3J5cHRvLXNlYXJjaC1jcnlwdG8ubmV0bGlmeS5hcHBcIixcbiAgICBpZDogMSxcbiAgfSxcbiAgLFxuICB7XG4gICAgdGl0bGU6IFwiRnVsbFN0YWNrIFJlZGRpdCBDbG9uZVwiLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgXCJUaGUgcHVycG9zZSBvZiB0aGlzIHByb2plY3QgaXMgdG8gbGVhcm4gRnVsbCBzdGFjayBkZXZlbG9wbWVudCB3aXQgbmV3IGN1dHRpbmcgZWRnZSB0ZWNobm9sb2dpZXMgc3VjaCBhcyBOZXh0LmpzLCBHcmFwaFFMLCBTU1IsIENTUiwgcmVkaXMsIHR5cGVTY3JpcHQsIFVSUUwvQXBvbGxvLCBUeXBlR3JhcGhRTCwgYW5kIGV0Yy4gVGhpcyBSZWRkaXQgY2xvbmUgd2lsbCBjb250YWluIGJhc2ljIGZlYXR1cmVzIG9mIFJlZGRpdCByZWxhdGVkIHRvIHByb2ZpbGUsIHBvc3RzLCBjb21tZW50aW5nIG9uIGEgcG9zdCwgdm90aW5nIG9uIHBvc3QsIGV0YyAgXCIsXG4gICAgaW1hZ2U6IFwiL2ltYWdlcy9sb2dpbi5wbmdcIixcbiAgICB0YWdzOiBbXCJHcmFwaFFMXCIsIFwiVHlwZVNjcmlwdFwiLCBcIk5vZGUuanNcIiwgXCJvdGhlcnNcIl0sXG4gICAgc291cmNlOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9mdWxsaGFpZGVyMTk5Ny9yZWRkaXQtY2xvbmVcIixcbiAgICBpZDogMixcbiAgfSxcblxuICB7XG4gICAgdGl0bGU6IFwiR2F6ZSBhbmQgYmxpbmsgY29udHJvbGxlZCB2aXJ0dWFsIGtleWJvYXJkXCIsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICBcIlRoaXMgcHJvamVjdCBpcyBkZXZlbG9wZWQgZm9yIHNha2Ugb2YgaW1wcm92aW5nIG15IG93biBza2lsbHMgaW4gQysrICwgbXVsdGl0aHJlYWRpbmcsIGNvbXB1dGVyIHZpc2lvbiBhbmQgc29mdHdhcmUgZGVzaWduLlwiLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvZ2F6ZS5wbmdcIixcbiAgICB0YWdzOiBbXCJDKytcIiwgXCJRdFwiLCBcIkRsaWJcIiwgXCJRTWFrZVwiXSxcbiAgICBzb3VyY2U6XG4gICAgICBcImh0dHBzOi8vZ2l0aHViLmNvbS9mdWxsaGFpZGVyMTk5Ny9HYXplX0NvbnRyb2xsZWRfS2V5Ym9hcmQtL3RyZWUvbWFzdGVyXCIsXG4gICAgaWQ6IDMsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJBIFNob3BwaW5nIENhcnRcIixcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgIFwiQSBTaG9wcGluZyBDYXJ0IHdpdGggUmVhY3QgYW5kIFR5cGVTY3JpcHQuIFRoZSBjbGllbnQgY2FuIGFkZCwgcmVtb3ZlLCB1cGRhdGUgaXRlbXMgaW4gaGlzL2hlciBjYXJ0LlwiLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvY2FydHRocmVlLnBuZ1wiLFxuICAgIHRhZ3M6IFtcIlJlYWN0XCIsIFwiVHlwZVNjcmlwdFwiXSxcbiAgICBzb3VyY2U6IFwiaHR0cHM6Ly9naXRodWIuY29tL2Z1bGxoYWlkZXIxOTk3L0NhcnRcIixcbiAgICBpZDogNCxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIkhlYWx0aCBtYW5hZ21lbnQgc29mdHdhcmVcIixcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgIFwiVGhlIHN5c3RlbSB3aWxsIGJlIHVzZWQgYnkgYm90aCB0aGUgcGF0aWVudHMgYW5kIGFkbWluaXN0cmF0aXZlL21lZGljYWwgc3RhZmYuIEEgbG9naW4gc3lzdGVtIGlzIGltcGxlbWVudGVkIGFuZCB0aGUgc3lzdGVtIGZ1bmN0aW9ucyBkaWZmZXJlbnRseSBkZXBlbmRpbmcgb24gdGhlIHVzZXIuIFRoZSBwYXRpZW50cyBhcmUgYWJsZSB0byByZXF1ZXN0IGFwcG9pbnRtZW50cyB3aXRoIHBoeXNpY2lhbnMgdXBvbiBhcHByb3ZhbCBvZiBhZG1pbmlzdHJhdGl2ZSBzdGFmZiBkZXBlbmRpbmcgb24gYXZhaWxhYmlsaXR5IGFuZCBwcmlvcml0eSBsZXZlbC5cIixcbiAgICBpbWFnZTogXCIvaW1hZ2VzL2htcy5wbmdcIixcbiAgICB0YWdzOiBbXCJKYXZhXCIsIFwiTXlTUUxcIiwgXCJTd2luZ1wiXSxcbiAgICBzb3VyY2U6IFwiaHR0cHM6Ly9naXRodWIuY29tL2Z1bGxoYWlkZXIxOTk3L0hNU1wiLFxuICAgIGlkOiA1LFxuICB9LFxuXG4gIHtcbiAgICB0aXRsZTogXCJTbWFydCBNaXJyb3IgSU9UIFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIlNtYXJ0IE1pcnJvciB0byB0ZWFjaCBraWRzIGFib3V0IHRlY2hub2xvZ3lcIixcbiAgICBpbWFnZTogXCIvaW1hZ2VzL3NtYXJ0bWlycm9yLnBuZ1wiLFxuICAgIHRhZ3M6IFtcIkphdmFcIiwgXCJBbmRyb2lkXCIsIFwiRmlyZWJhc2VcIiwgXCJQeXRob25cIl0sXG4gICAgc291cmNlOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9UcnVuZzI4ODk5L1NtYXJ0TWlycm9yQXBwXCIsXG4gICAgaWQ6IDYsXG4gIH0sXG5dO1xuIl0sIm5hbWVzIjpbInByb2plY3RzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImltYWdlIiwibGluayIsImNhcHRpb24iLCJ0YWdzIiwic291cmNlIiwidmlzaXQiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/constants/constants.js\n"));

/***/ })

});